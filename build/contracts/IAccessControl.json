{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "@openzeppelin/contracts/access/IAccessControl.sol"
  },
  "ast": {
    "absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
    "exportedSymbols": {
      "IAccessControl": [
        8100
      ]
    },
    "id": 8101,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8029,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "94:23:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IAccessControl",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 8030,
          "nodeType": "StructuredDocumentation",
          "src": "119:89:1",
          "text": " @dev External interface of AccessControl declared to support ERC165 detection."
        },
        "fullyImplemented": false,
        "id": 8100,
        "linearizedBaseContracts": [
          8100
        ],
        "name": "IAccessControl",
        "nameLocation": "219:14:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 8031,
              "nodeType": "StructuredDocumentation",
              "src": "240:292:1",
              "text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
            },
            "id": 8039,
            "name": "RoleAdminChanged",
            "nameLocation": "543:16:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8033,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "576:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8039,
                  "src": "560:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8032,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "560:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8035,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "previousAdminRole",
                  "nameLocation": "598:17:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8039,
                  "src": "582:33:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8034,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "582:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8037,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newAdminRole",
                  "nameLocation": "633:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8039,
                  "src": "617:28:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8036,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "617:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "559:87:1"
            },
            "src": "537:110:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 8040,
              "nodeType": "StructuredDocumentation",
              "src": "653:212:1",
              "text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
            },
            "id": 8048,
            "name": "RoleGranted",
            "nameLocation": "876:11:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8042,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "904:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8048,
                  "src": "888:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8041,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "888:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8044,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "926:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8048,
                  "src": "910:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8043,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "910:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8046,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "951:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8048,
                  "src": "935:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8045,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "935:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "887:71:1"
            },
            "src": "870:89:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 8049,
              "nodeType": "StructuredDocumentation",
              "src": "965:275:1",
              "text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
            },
            "id": 8057,
            "name": "RoleRevoked",
            "nameLocation": "1251:11:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8056,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8051,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "1279:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8057,
                  "src": "1263:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8050,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1263:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8053,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1301:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8057,
                  "src": "1285:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8052,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1285:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8055,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1326:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8057,
                  "src": "1310:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8054,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1310:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1262:71:1"
            },
            "src": "1245:89:1"
          },
          {
            "documentation": {
              "id": 8058,
              "nodeType": "StructuredDocumentation",
              "src": "1340:76:1",
              "text": " @dev Returns `true` if `account` has been granted `role`."
            },
            "functionSelector": "91d14854",
            "id": 8067,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "hasRole",
            "nameLocation": "1430:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8060,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "1446:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8067,
                  "src": "1438:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8059,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1438:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8062,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1460:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8067,
                  "src": "1452:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8061,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1452:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1437:31:1"
            },
            "returnParameters": {
              "id": 8066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8065,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8067,
                  "src": "1492:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8064,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1492:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1491:6:1"
            },
            "scope": 8100,
            "src": "1421:77:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8068,
              "nodeType": "StructuredDocumentation",
              "src": "1504:184:1",
              "text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
            },
            "functionSelector": "248a9ca3",
            "id": 8075,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRoleAdmin",
            "nameLocation": "1702:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8070,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "1723:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8075,
                  "src": "1715:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8069,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1715:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1714:14:1"
            },
            "returnParameters": {
              "id": 8074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8073,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8075,
                  "src": "1752:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8072,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1752:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1751:9:1"
            },
            "scope": 8100,
            "src": "1693:68:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8076,
              "nodeType": "StructuredDocumentation",
              "src": "1767:239:1",
              "text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
            },
            "functionSelector": "2f2ff15d",
            "id": 8083,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "grantRole",
            "nameLocation": "2020:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8078,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "2038:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8083,
                  "src": "2030:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8077,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2030:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8080,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2052:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8083,
                  "src": "2044:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8079,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2044:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2029:31:1"
            },
            "returnParameters": {
              "id": 8082,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2069:0:1"
            },
            "scope": 8100,
            "src": "2011:59:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8084,
              "nodeType": "StructuredDocumentation",
              "src": "2076:223:1",
              "text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
            },
            "functionSelector": "d547741f",
            "id": 8091,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "revokeRole",
            "nameLocation": "2313:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8086,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "2332:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8091,
                  "src": "2324:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8085,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2324:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8088,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2346:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8091,
                  "src": "2338:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8087,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2338:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2323:31:1"
            },
            "returnParameters": {
              "id": 8090,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2363:0:1"
            },
            "scope": 8100,
            "src": "2304:60:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8092,
              "nodeType": "StructuredDocumentation",
              "src": "2370:480:1",
              "text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
            },
            "functionSelector": "36568abe",
            "id": 8099,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "renounceRole",
            "nameLocation": "2864:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8094,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "2885:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8099,
                  "src": "2877:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8093,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2877:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8096,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2899:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8099,
                  "src": "2891:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8095,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2891:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2876:31:1"
            },
            "returnParameters": {
              "id": 8098,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2916:0:1"
            },
            "scope": 8100,
            "src": "2855:62:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8101,
        "src": "209:2710:1",
        "usedErrors": []
      }
    ],
    "src": "94:2826:1"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "IAccessControl",
  "coverageMap": {
    "branches": {},
    "statements": {}
  },
  "dependencies": [],
  "deployedBytecode": "",
  "deployedSourceMap": "",
  "language": "Solidity",
  "natspec": {
    "details": "External interface of AccessControl declared to support ERC165 detection.",
    "events": {
      "RoleAdminChanged(bytes32,bytes32,bytes32)": {
        "details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
      },
      "RoleGranted(bytes32,address,address)": {
        "details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
      },
      "RoleRevoked(bytes32,address,address)": {
        "details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
      }
    },
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      }
    },
    "version": 1
  },
  "offset": [
    209,
    2919
  ],
  "opcodes": "",
  "pcMap": {},
  "sha1": "c2c2cbb1c78839732cdddbf4e75d2de30623f4b7",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n",
  "sourceMap": "",
  "sourcePath": "@openzeppelin/contracts/access/IAccessControl.sol",
  "type": "interface"
}